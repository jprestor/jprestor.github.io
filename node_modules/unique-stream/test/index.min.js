var expect=require("chai").expect,unique=require(".."),Stream=require("stream"),after=require("after"),setImmediate=global.setImmediate||process.nextTick;describe("unique stream",function(){function e(e){var t=new Stream;t.readable=!0;for(var r=10,n=after(r,function(){setImmediate(function(){t.emit("end")})}),i=0;r>i;i++){var a={type:e,name:"name "+i,number:10*i};!function(e){setImmediate(function(){t.emit("data",e),n()})}(a)}return t}it("should be able to uniqueify objects based on JSON data",function(t){var r=unique();e("a").pipe(r),e("a").pipe(r);var n=0;r.on("data",function(){n++}).on("end",function(){expect(n).to.equal(10),t()})}),it("should be able to uniqueify objects based on a property",function(t){var r=unique("number");e("a").pipe(r),e("b").pipe(r);var n=0;r.on("data",function(){n++}).on("end",function(){expect(n).to.equal(10),t()})}),it("should be able to uniqueify objects based on a function",function(t){var r=unique(function(e){return e.name});e("a").pipe(r),e("b").pipe(r);var n=0;r.on("data",function(){n++}).on("end",function(){expect(n).to.equal(10),t()})}),it("should be able to handle uniqueness when not piped",function(e){var t=unique(),r=0;t.on("data",function(e){expect(e).to.equal("hello"),r++}),t.on("end",function(){expect(r).to.equal(1),e()}),t.write("hello"),t.write("hello"),t.end()})});