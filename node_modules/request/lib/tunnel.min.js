"use strict";function constructProxyHost(e){var t=e.port,r=e.protocol,n=e.hostname+":";return n+=t?t:"https:"===r?"443":"80"}function constructProxyHeaderWhiteList(e,t){var r=t.reduce(function(e,t){return e[t.toLowerCase()]=!0,e},{});return Object.keys(e).filter(function(e){return r[e.toLowerCase()]}).reduce(function(t,r){return t[r]=e[r],t},{})}function constructTunnelOptions(e,t){var r=e.proxy,n={proxy:{host:r.hostname,port:+r.port,proxyAuth:r.auth,headers:t},headers:e.headers,ca:e.ca,cert:e.cert,key:e.key,passphrase:e.passphrase,pfx:e.pfx,ciphers:e.ciphers,rejectUnauthorized:e.rejectUnauthorized,secureOptions:e.secureOptions,secureProtocol:e.secureProtocol};return n}function constructTunnelFnName(e,t){var r="https:"===e.protocol?"https":"http",n="https:"===t.protocol?"Https":"Http";return[r,n].join("Over")}function getTunnelFn(e){var t=e.uri,r=e.proxy,n=constructTunnelFnName(t,r);return tunnel[n]}function Tunnel(e){this.request=e,this.proxyHeaderWhiteList=defaultProxyHeaderWhiteList,this.proxyHeaderExclusiveList=[],"undefined"!=typeof e.tunnel&&(this.tunnelOverride=e.tunnel)}var url=require("url"),tunnel=require("tunnel-agent"),defaultProxyHeaderWhiteList=["accept","accept-charset","accept-encoding","accept-language","accept-ranges","cache-control","content-encoding","content-language","content-location","content-md5","content-range","content-type","connection","date","expect","max-forwards","pragma","referer","te","user-agent","via"],defaultProxyHeaderExclusiveList=["proxy-authorization"];Tunnel.prototype.isEnabled=function(){var e=this,t=e.request;return"undefined"!=typeof e.tunnelOverride?e.tunnelOverride:"https:"===t.uri.protocol?!0:!1},Tunnel.prototype.setup=function(e){var t=this,r=t.request;if(e=e||{},"string"==typeof r.proxy&&(r.proxy=url.parse(r.proxy)),!r.proxy||!r.tunnel)return!1;e.proxyHeaderWhiteList&&(t.proxyHeaderWhiteList=e.proxyHeaderWhiteList),e.proxyHeaderExclusiveList&&(t.proxyHeaderExclusiveList=e.proxyHeaderExclusiveList);var n=t.proxyHeaderExclusiveList.concat(defaultProxyHeaderExclusiveList),i=t.proxyHeaderWhiteList.concat(n),a=constructProxyHeaderWhiteList(r.headers,i);a.host=constructProxyHost(r.uri),n.forEach(r.removeHeader,r);var o=getTunnelFn(r),s=constructTunnelOptions(r,a);return r.agent=o(s),!0},Tunnel.defaultProxyHeaderWhiteList=defaultProxyHeaderWhiteList,Tunnel.defaultProxyHeaderExclusiveList=defaultProxyHeaderExclusiveList,exports.Tunnel=Tunnel;