var test=require("tape"),path=require("path"),parse=path.parse||require("path-parse"),keys=require("object-keys"),nodeModulesPaths=require("../lib/node-modules-paths"),verifyDirs=function(e,t,r,n,i){for(var a=[].concat(n||"node_modules"),o={},s={},u={},l=0;l<r.length;++l){var c=parse(r[l]);o[c.base]||(o[c.base]=0),o[c.base]+=1,u[c.dir]=!0,s[r[l]]=!0}e.equal(keys(u).length>=t.split(path.sep).length,!0,'there are >= dirs than "start" has');var f=keys(o);e.deepEqual(f,a.concat(i||[]),"all desired module dirs were found"),e.equal(keys(s).length,r.length,"all dirs provided were unique");for(var p={},h=0;h<f.length;++h)p[o[h]]=!0;e.equal(keys(p).length,1,"all found module directories had the same count")};test("node-modules-paths",function(e){e.test("no options",function(e){var t=path.join(__dirname,"resolver"),r=nodeModulesPaths(t);verifyDirs(e,t,r),e.end()}),e.test("empty options",function(e){var t=path.join(__dirname,"resolver"),r=nodeModulesPaths(t,{});verifyDirs(e,t,r),e.end()}),e.test("with paths option",function(e){var t=path.join(__dirname,"resolver"),r=["a","b"],n=nodeModulesPaths(t,{paths:r});verifyDirs(e,t,n,null,r),e.end()}),e.test("with moduleDirectory option",function(e){var t=path.join(__dirname,"resolver"),r="not node modules",n=nodeModulesPaths(t,{moduleDirectory:r});verifyDirs(e,t,n,r),e.end()}),e.test("with 1 moduleDirectory and paths options",function(e){var t=path.join(__dirname,"resolver"),r=["a","b"],n="not node modules",i=nodeModulesPaths(t,{paths:r,moduleDirectory:n});verifyDirs(e,t,i,n,r),e.end()}),e.test("with 1+ moduleDirectory and paths options",function(e){var t=path.join(__dirname,"resolver"),r=["a","b"],n=["not node modules","other modules"],i=nodeModulesPaths(t,{paths:r,moduleDirectory:n});verifyDirs(e,t,i,n,r),e.end()})});