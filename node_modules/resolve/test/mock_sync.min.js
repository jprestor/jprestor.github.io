var path=require("path"),test=require("tape"),resolve=require("../");test("mock",function(e){function r(e){return{basedir:path.resolve(e),isFile:function(e){return Object.prototype.hasOwnProperty.call(t,e)},readFileSync:function(e){return t[e]}}}e.plan(4);var t={};t[path.resolve("/foo/bar/baz.js")]="beep",e.equal(resolve.sync("./baz",r("/foo/bar")),path.resolve("/foo/bar/baz.js")),e.equal(resolve.sync("./baz.js",r("/foo/bar")),path.resolve("/foo/bar/baz.js")),e["throws"](function(){resolve.sync("baz",r("/foo/bar"))}),e["throws"](function(){resolve.sync("../baz",r("/foo/bar"))})}),test("mock package",function(e){function r(e){return{basedir:path.resolve(e),isFile:function(e){return Object.prototype.hasOwnProperty.call(t,e)},readFileSync:function(e){return t[e]}}}e.plan(1);var t={};t[path.resolve("/foo/node_modules/bar/baz.js")]="beep",t[path.resolve("/foo/node_modules/bar/package.json")]=JSON.stringify({main:"./baz.js"}),e.equal(resolve.sync("bar",r("/foo")),path.resolve("/foo/node_modules/bar/baz.js"))});