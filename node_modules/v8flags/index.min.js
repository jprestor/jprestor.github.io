function fail(e){return e.message+="\n\n"+failureMessage,e}function openConfig(e){var t=require("user-home");return t?void tryOpenConfig(path.join(t,configfile),function(t,r){return t?tryOpenConfig(path.join(os.tmpdir(),configfile),e):e(null,r)}):tryOpenConfig(path.join(os.tmpdir(),configfile),e)}function tryOpenConfig(e,t){try{var r=require(e);process.nextTick(function(){t(null,r)})}catch(n){fs.open(e,"w+",function(e,r){return e?t(e):t(null,r)})}}function getFlags(e){execFile(process.execPath,["--v8-options"],function(t,r){if(t)return e(t);var n=r.match(/\s\s--(\w+)/gm).map(function(e){return e.substring(2)}).filter(function(e){return-1===exclusions.indexOf(e)});return e(null,n)})}function writeConfig(e,t,r){var n=new Buffer(JSON.stringify(t));return fs.write(e,n,0,n.length,0,function(n){fs.close(e,function(e){var i=n||e;return i?r(fail(i),t):r(null,t)})})}const os=require("os"),fs=require("fs"),path=require("path"),crypto=require("crypto"),execFile=require("child_process").execFile,env=process.env,user=env.LOGNAME||env.USER||env.LNAME||env.USERNAME||"",exclusions=["--help"],configfile=".v8flags."+process.versions.v8+"."+crypto.createHash("md5").update(user).digest("hex")+".json",failureMessage=["Unable to cache a config file for v8flags to a your home directory","or a temporary folder. To fix this problem, please correct your","environment by setting HOME=/path/to/home or TEMP=/path/to/temp.","NOTE: the user running this must be able to access provided path.","If all else fails, please open an issue here:","http://github.com/tkellen/js-v8flags"].join("\n");module.exports=function(e){var t=process.versions&&process.versions.electron;return t?process.nextTick(function(){e(null,[])}):void openConfig(function(t,r){return t||"number"==typeof r?void getFlags(function(n,i){return n?e(n):t?e(fail(t),i):writeConfig(r,i,e)}):e(null,r)})},module.exports.configfile=configfile;