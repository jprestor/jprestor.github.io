function Certificate(e){assert.object(e,"options"),assert.arrayOfObject(e.subjects,"options.subjects"),utils.assertCompatible(e.subjects[0],Identity,[1,0],"options.subjects"),utils.assertCompatible(e.subjectKey,Key,[1,0],"options.subjectKey"),utils.assertCompatible(e.issuer,Identity,[1,0],"options.issuer"),void 0!==e.issuerKey&&utils.assertCompatible(e.issuerKey,Key,[1,0],"options.issuerKey"),assert.object(e.signatures,"options.signatures"),assert.buffer(e.serial,"options.serial"),assert.date(e.validFrom,"options.validFrom"),assert.date(e.validUntil,"optons.validUntil"),assert.optionalArrayOfString(e.purposes,"options.purposes"),this._hashCache={},this.subjects=e.subjects,this.issuer=e.issuer,this.subjectKey=e.subjectKey,this.issuerKey=e.issuerKey,this.signatures=e.signatures,this.serial=e.serial,this.validFrom=e.validFrom,this.validUntil=e.validUntil,this.purposes=e.purposes}module.exports=Certificate;var assert=require("assert-plus"),algs=require("./algs"),crypto=require("crypto"),Fingerprint=require("./fingerprint"),Signature=require("./signature"),errs=require("./errors"),util=require("util"),utils=require("./utils"),Key=require("./key"),PrivateKey=require("./private-key"),Identity=require("./identity"),formats={};formats.openssh=require("./formats/openssh-cert"),formats.x509=require("./formats/x509"),formats.pem=require("./formats/x509-pem");var CertificateParseError=errs.CertificateParseError,InvalidAlgorithmError=errs.InvalidAlgorithmError;Certificate.formats=formats,Certificate.prototype.toBuffer=function(e,t){return void 0===e&&(e="x509"),assert.string(e,"format"),assert.object(formats[e],"formats[format]"),assert.optionalObject(t,"options"),formats[e].write(this,t)},Certificate.prototype.toString=function(e,t){return void 0===e&&(e="pem"),this.toBuffer(e,t).toString()},Certificate.prototype.fingerprint=function(e){void 0===e&&(e="sha256"),assert.string(e,"algorithm");var t={type:"certificate",hash:this.hash(e),algorithm:e};return new Fingerprint(t)},Certificate.prototype.hash=function(e){if(assert.string(e,"algorithm"),e=e.toLowerCase(),void 0===algs.hashAlgs[e])throw new InvalidAlgorithmError(e);if(this._hashCache[e])return this._hashCache[e];var t=crypto.createHash(e).update(this.toBuffer("x509")).digest();return this._hashCache[e]=t,t},Certificate.prototype.isExpired=function(e){return void 0===e&&(e=new Date),!(e.getTime()>=this.validFrom.getTime()&&e.getTime()<this.validUntil.getTime())},Certificate.prototype.isSignedBy=function(e){return utils.assertCompatible(e,Certificate,[1,0],"issuer"),this.issuer.equals(e.subjects[0])?this.issuer.purposes&&this.issuer.purposes.length>0&&-1===this.issuer.purposes.indexOf("ca")?!1:this.isSignedByKey(e.subjectKey):!1},Certificate.prototype.isSignedByKey=function(e){if(utils.assertCompatible(e,Key,[1,2],"issuerKey"),void 0!==this.issuerKey)return this.issuerKey.fingerprint("sha512").matches(e);var t=Object.keys(this.signatures)[0],r=formats[t].verify(this,e);return r&&(this.issuerKey=e),r},Certificate.prototype.signWith=function(e){utils.assertCompatible(e,PrivateKey,[1,2],"key");for(var t=Object.keys(formats),r=!1,n=0;n<t.length;++n)if("pem"!==t[n]){var i=formats[t[n]].sign(this,e);i===!0&&(r=!0)}if(!r)throw new Error("Failed to sign the certificate for any available certificate formats")},Certificate.createSelfSigned=function(e,t,r){var n;n=Array.isArray(e)?e:[e],assert.arrayOfObject(n),n.forEach(function(e){utils.assertCompatible(e,Identity,[1,0],"subject")}),utils.assertCompatible(t,PrivateKey,[1,2],"private key"),assert.optionalObject(r,"options"),void 0===r&&(r={}),assert.optionalObject(r.validFrom,"options.validFrom"),assert.optionalObject(r.validUntil,"options.validUntil");var i=r.validFrom,a=r.validUntil;if(void 0===i&&(i=new Date),void 0===a){assert.optionalNumber(r.lifetime,"options.lifetime");var o=r.lifetime;void 0===o&&(o=31536e4),a=new Date,a.setTime(a.getTime()+1e3*o)}assert.optionalBuffer(r.serial,"options.serial");var s=r.serial;void 0===s&&(s=new Buffer("0000000000000001","hex"));var u=r.purposes;if(void 0===u&&(u=[]),-1===u.indexOf("signature")&&u.push("signature"),-1===u.indexOf("ca")&&u.push("ca"),-1===u.indexOf("crl")&&u.push("crl"),u.length<=3){var l=n.filter(function(e){return"host"===e.type}),c=n.filter(function(e){return"user"===e.type});l.length>0&&-1===u.indexOf("serverAuth")&&u.push("serverAuth"),c.length>0&&-1===u.indexOf("clientAuth")&&u.push("clientAuth"),(c.length>0||l.length>0)&&(-1===u.indexOf("keyAgreement")&&u.push("keyAgreement"),"rsa"===t.type&&-1===u.indexOf("encryption")&&u.push("encryption"))}var f=new Certificate({subjects:n,issuer:n[0],subjectKey:t.toPublic(),issuerKey:t.toPublic(),signatures:{},serial:s,validFrom:i,validUntil:a,purposes:u});return f.signWith(t),f},Certificate.create=function(e,t,r,n,i){var a;a=Array.isArray(e)?e:[e],assert.arrayOfObject(a),a.forEach(function(e){utils.assertCompatible(e,Identity,[1,0],"subject")}),utils.assertCompatible(t,Key,[1,0],"key"),PrivateKey.isPrivateKey(t)&&(t=t.toPublic()),utils.assertCompatible(r,Identity,[1,0],"issuer"),utils.assertCompatible(n,PrivateKey,[1,2],"issuer key"),assert.optionalObject(i,"options"),void 0===i&&(i={}),assert.optionalObject(i.validFrom,"options.validFrom"),assert.optionalObject(i.validUntil,"options.validUntil");var o=i.validFrom,s=i.validUntil;if(void 0===o&&(o=new Date),void 0===s){assert.optionalNumber(i.lifetime,"options.lifetime");var u=i.lifetime;void 0===u&&(u=31536e4),s=new Date,s.setTime(s.getTime()+1e3*u)}assert.optionalBuffer(i.serial,"options.serial");var l=i.serial;void 0===l&&(l=new Buffer("0000000000000001","hex"));var c=i.purposes;void 0===c&&(c=[]),-1===c.indexOf("signature")&&c.push("signature"),i.ca===!0&&(-1===c.indexOf("ca")&&c.push("ca"),-1===c.indexOf("crl")&&c.push("crl"));var f=a.filter(function(e){return"host"===e.type}),p=a.filter(function(e){return"user"===e.type});f.length>0&&-1===c.indexOf("serverAuth")&&c.push("serverAuth"),p.length>0&&-1===c.indexOf("clientAuth")&&c.push("clientAuth"),(p.length>0||f.length>0)&&(-1===c.indexOf("keyAgreement")&&c.push("keyAgreement"),"rsa"===t.type&&-1===c.indexOf("encryption")&&c.push("encryption"));var h=new Certificate({subjects:a,issuer:r,subjectKey:t,issuerKey:n.toPublic(),signatures:{},serial:l,validFrom:o,validUntil:s,purposes:c});return h.signWith(n),h},Certificate.parse=function(e,t,r){"string"!=typeof e&&assert.buffer(e,"data"),void 0===t&&(t="auto"),assert.string(t,"format"),"string"==typeof r&&(r={filename:r}),assert.optionalObject(r,"options"),void 0===r&&(r={}),assert.optionalString(r.filename,"options.filename"),void 0===r.filename&&(r.filename="(unnamed)"),assert.object(formats[t],"formats[format]");try{var n=formats[t].read(e,r);return n}catch(i){throw new CertificateParseError(r.filename,t,i)}},Certificate.isCertificate=function(e,t){return utils.isCompatible(e,Certificate,t)},Certificate.prototype._sshpkApiVersion=[1,0],Certificate._oldVersionDetect=function(e){return[1,0]};