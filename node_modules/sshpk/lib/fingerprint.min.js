function Fingerprint(e){if(assert.object(e,"options"),assert.string(e.type,"options.type"),assert.buffer(e.hash,"options.hash"),assert.string(e.algorithm,"options.algorithm"),this.algorithm=e.algorithm.toLowerCase(),algs.hashAlgs[this.algorithm]!==!0)throw new InvalidAlgorithmError(this.algorithm);this.hash=e.hash,this.type=e.type}function addColons(e){return e.replace(/(.{2})(?=.)/g,"$1:")}function base64Strip(e){return e.replace(/=*$/,"")}function sshBase64Format(e,t){return e.toUpperCase()+":"+base64Strip(t)}module.exports=Fingerprint;var assert=require("assert-plus"),algs=require("./algs"),crypto=require("crypto"),errs=require("./errors"),Key=require("./key"),Certificate=require("./certificate"),utils=require("./utils"),FingerprintFormatError=errs.FingerprintFormatError,InvalidAlgorithmError=errs.InvalidAlgorithmError;Fingerprint.prototype.toString=function(e){switch(void 0===e&&(e="md5"===this.algorithm?"hex":"base64"),assert.string(e),e){case"hex":return addColons(this.hash.toString("hex"));case"base64":return sshBase64Format(this.algorithm,this.hash.toString("base64"));default:throw new FingerprintFormatError(void 0,e)}},Fingerprint.prototype.matches=function(e){assert.object(e,"key or certificate"),"key"===this.type?utils.assertCompatible(e,Key,[1,0],"key"):utils.assertCompatible(e,Certificate,[1,0],"certificate");var t=e.hash(this.algorithm),r=crypto.createHash(this.algorithm).update(t).digest("base64");return void 0===this.hash2&&(this.hash2=crypto.createHash(this.algorithm).update(this.hash).digest("base64")),this.hash2===r},Fingerprint.parse=function(e,t){assert.string(e,"fingerprint");var r,n,i;Array.isArray(t)&&(i=t,t={}),assert.optionalObject(t,"options"),void 0===t&&(t={}),void 0!==t.enAlgs&&(i=t.enAlgs),assert.optionalArrayOfString(i,"algorithms");var a=e.split(":");if(2==a.length){r=a[0].toLowerCase();var o=/^[A-Za-z0-9+\/=]+$/;if(!o.test(a[1]))throw new FingerprintFormatError(e);try{n=new Buffer(a[1],"base64")}catch(s){throw new FingerprintFormatError(e)}}else if(a.length>2){r="md5","md5"===a[0].toLowerCase()&&(a=a.slice(1)),a=a.join("");var u=/^[a-fA-F0-9]+$/;if(!u.test(a))throw new FingerprintFormatError(e);try{n=new Buffer(a,"hex")}catch(s){throw new FingerprintFormatError(e)}}if(void 0===r)throw new FingerprintFormatError(e);if(void 0===algs.hashAlgs[r])throw new InvalidAlgorithmError(r);if(void 0!==i&&(i=i.map(function(e){return e.toLowerCase()}),-1===i.indexOf(r)))throw new InvalidAlgorithmError(r);return new Fingerprint({algorithm:r,hash:n,type:t.type||"key"})},Fingerprint.isFingerprint=function(e,t){return utils.isCompatible(e,Fingerprint,t)},Fingerprint.prototype._sshpkApiVersion=[1,1],Fingerprint._oldVersionDetect=function(e){return assert.func(e.toString),assert.func(e.matches),[1,0]};