function read(e,t){"string"!=typeof e&&(assert.buffer(e,"buf"),e=e.toString("ascii"));var r=e.trim().split(/[\r\n]+/g),n=r[0].match(/[-]+[ ]*BEGIN CERTIFICATE[ ]*[-]+/);assert.ok(n,"invalid PEM header");var i=r[r.length-1].match(/[-]+[ ]*END CERTIFICATE[ ]*[-]+/);assert.ok(i,"invalid PEM footer");for(var a={};;){if(r=r.slice(1),n=r[0].match(/^([A-Za-z0-9-]+): (.+)$/),!n)break;a[n[1].toLowerCase()]=n[2]}return r=r.slice(0,-1).join(""),e=new Buffer(r,"base64"),x509.read(e,t)}function write(e,t){var r=x509.write(e,t),n="CERTIFICATE",i=r.toString("base64"),a=i.length+i.length/64+18+16+2*n.length+10,o=new Buffer(a),s=0;s+=o.write("-----BEGIN "+n+"-----\n",s);for(var u=0;u<i.length;){var l=u+64;l>i.length&&(l=i.length),s+=o.write(i.slice(u,l),s),o[s++]=10,u=l}return s+=o.write("-----END "+n+"-----\n",s),o.slice(0,s)}var x509=require("./x509");module.exports={read:read,verify:x509.verify,sign:x509.sign,write:write};var assert=require("assert-plus"),asn1=require("asn1"),algs=require("../algs"),utils=require("../utils"),Key=require("../key"),PrivateKey=require("../private-key"),pem=require("./pem"),Identity=require("../identity"),Signature=require("../signature"),Certificate=require("../certificate");