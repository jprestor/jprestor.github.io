function read_source_map(e){var t=/\n\/\/# sourceMappingURL=data:application\/json(;.*?)?;base64,(.*)/.exec(e);return t?JSON.parse(new Buffer(t[2],"base64")):(UglifyJS.AST_Node.warn("inline source map not found"),null)}function readReservedFile(e,t){t||(t={vars:[],props:[]});var r=fs.readFileSync(e,"utf8");return r=JSON.parse(r),r.vars&&r.vars.forEach(function(e){UglifyJS.push_uniq(t.vars,e)}),r.props&&r.props.forEach(function(e){UglifyJS.push_uniq(t.props,e)}),t}[process.stdout,process.stderr].forEach(function(e){e._handle&&e._handle.setBlocking&&e._handle.setBlocking(!0)});var path=require("path"),fs=require("fs"),UglifyJS=exports,FILES=UglifyJS.FILES=["../lib/utils.js","../lib/ast.js","../lib/parse.js","../lib/transform.js","../lib/scope.js","../lib/output.js","../lib/compress.js","../lib/sourcemap.js","../lib/mozilla-ast.js","../lib/propmangle.js","./exports.js"].map(function(e){return require.resolve(e)});new Function("MOZ_SourceMap","exports",FILES.map(function(e){return fs.readFileSync(e,"utf8")}).join("\n\n"))(require("source-map"),UglifyJS),UglifyJS.AST_Node.warn_function=function(e){console.error("WARN: %s",e)},UglifyJS.minify=function(e,t){function a(e,a){var o=t.fromString?e:fs.readFileSync(e,"utf8");"inline"==r&&(r=read_source_map(o)),i[a]=o,n=UglifyJS.parse(o,{filename:a,toplevel:n,bare_returns:t.parse?t.parse.bare_returns:void 0})}t=UglifyJS.defaults(t,{compress:{},fromString:!1,inSourceMap:null,mangle:{},mangleProperties:!1,nameCache:null,outFileName:null,output:null,outSourceMap:null,parse:{},sourceMapInline:!1,sourceMapUrl:null,sourceRoot:null,spidermonkey:!1,warnings:!1}),UglifyJS.base54.reset();var r=t.inSourceMap;"string"==typeof r&&"inline"!=r&&(r=JSON.parse(fs.readFileSync(r,"utf8")));var n=null,i={};if(t.spidermonkey){if("inline"==r)throw new Error("inline source map only works with built-in parser");n=UglifyJS.AST_Node.from_mozilla_ast(e)}else{if(!t.fromString&&(e=UglifyJS.simple_glob(e),"inline"==r&&e.length>1))throw new Error("inline source map only works with singular input");[].concat(e).forEach(function(e,r){if("string"==typeof e)a(e,t.fromString?r:e);else for(var n in e)a(e[n],n)})}if(t.wrap&&(n=n.wrap_commonjs(t.wrap,t.exportAll)),t.compress){var o={warnings:t.warnings};UglifyJS.merge(o,t.compress),n.figure_out_scope(t.mangle);var s=UglifyJS.Compressor(o);n=s.compress(n)}(t.mangleProperties||t.nameCache)&&(t.mangleProperties.cache=UglifyJS.readNameCache(t.nameCache,"props"),n=UglifyJS.mangle_properties(n,t.mangleProperties),UglifyJS.writeNameCache(t.nameCache,"props",t.mangleProperties.cache)),t.mangle&&(n.figure_out_scope(t.mangle),n.compute_char_frequency(t.mangle),n.mangle_names(t.mangle));var u={max_line_len:32e3};if((t.outSourceMap||t.sourceMapInline)&&(u.source_map=UglifyJS.SourceMap({file:t.outFileName||("string"==typeof t.outSourceMap?t.outSourceMap.replace(/\.map$/i,""):null),orig:r,root:t.sourceRoot}),t.sourceMapIncludeSources))for(var l in i)i.hasOwnProperty(l)&&u.source_map.get().setSourceContent(l,i[l]);t.output&&UglifyJS.merge(u,t.output);var c=UglifyJS.OutputStream(u);n.print(c);var f=u.source_map;f&&(f+="");var p="\n//# sourceMappingURL=";return t.sourceMapInline?c+=p+"data:application/json;charset=utf-8;base64,"+new Buffer(f).toString("base64"):t.outSourceMap&&"string"==typeof t.outSourceMap&&t.sourceMapUrl!==!1&&(c+=p+("string"==typeof t.sourceMapUrl?t.sourceMapUrl:t.outSourceMap)),{code:c+"",map:f}},UglifyJS.describe_ast=function(){function t(r){e.print("AST_"+r.TYPE);var n=r.SELF_PROPS.filter(function(e){return!/^\$/.test(e)});n.length>0&&(e.space(),e.with_parens(function(){n.forEach(function(t,r){r&&e.space(),e.print(t)})})),r.documentation&&(e.space(),e.print_string(r.documentation)),r.SUBCLASSES.length>0&&(e.space(),e.with_block(function(){r.SUBCLASSES.forEach(function(r,n){e.indent(),t(r),e.newline()})}))}var e=UglifyJS.OutputStream({beautify:!0});return t(UglifyJS.AST_Node),e+""},UglifyJS.readReservedFile=readReservedFile,UglifyJS.readDefaultReservedFile=function(e){return readReservedFile(require.resolve("./domprops.json"),e)},UglifyJS.readNameCache=function(e,t){var r=null;if(e)try{var r=fs.readFileSync(e,"utf8");if(r=JSON.parse(r)[t],!r)throw"init";r.props=UglifyJS.Dictionary.fromObject(r.props)}catch(n){r={cname:-1,props:new UglifyJS.Dictionary}}return r},UglifyJS.writeNameCache=function(e,t,r){if(e){var n;try{n=fs.readFileSync(e,"utf8"),n=JSON.parse(n)}catch(i){n={}}n[t]={cname:r.cname,props:r.props.toObject()},fs.writeFileSync(e,JSON.stringify(n,null,2),"utf8")}},UglifyJS.simple_glob=function e(t){if(Array.isArray(t))return[].concat.apply([],t.map(e));if(t.match(/\*|\?/)){var r=path.dirname(t);try{var n=fs.readdirSync(r)}catch(i){}if(n){var a="^"+path.basename(t).replace(/[.+^$[\]\\(){}]/g,"\\$&").replace(/\*/g,"[^/\\\\]*").replace(/\?/g,"[^/\\\\]")+"$",o="win32"===process.platform?"i":"",s=new RegExp(a,o),u=n.filter(function(e){return s.test(e)}).map(function(e){return path.join(r,e)});if(u.length)return u}}return[t]};